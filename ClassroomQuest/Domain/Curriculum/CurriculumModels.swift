import Foundation

struct CurriculumClass: Identifiable, Hashable {
    let id = UUID()
    let title: String
    let objective: String
    let gamifiedStrategy: String
    let swiftUIHighlights: [String]
    let reward: String
}

enum CurriculumSubject: String, CaseIterable, Identifiable {
    case math
    case language
    case science
    case socialStudies

    var id: String { rawValue }

    var displayName: String {
        switch self {
        case .math:
            return "Math"
        case .language:
            return "Language Arts"
        case .science:
            return "Science"
        case .socialStudies:
            return "Social Studies"
        }
    }

    var systemImageName: String {
        switch self {
        case .math:
            return "function"
        case .language:
            return "book.closed"
        case .science:
            return "atom"
        case .socialStudies:
            return "globe.asia.australia"
        }
    }
}

struct CurriculumModule: Identifiable, Hashable {
    let id = UUID()
    let subject: CurriculumSubject
    let title: String
    let overview: String
    let narrativeHook: String
    let rewardSummary: String
    let classes: [CurriculumClass]
}

struct GradeCourse: Identifiable, Hashable {
    let id = UUID()
    let gradeBand: GradeBand
    let heroTitle: String
    let overview: String
    let motivationNotes: String
    let modules: [CurriculumModule]
}

enum CurriculumCatalog {
    static let grade2: GradeCourse = {
        let mathClasses: [CurriculumClass] = [
            CurriculumClass(
                title: "Math Market Missions",
                objective: "Practice addition and subtraction within 100 while reinforcing money counting skills.",
                gamifiedStrategy: "Learners fulfill playful shop orders to earn coins and decide how to stock their carnival booth.",
                swiftUIHighlights: [
                    "Persist a coin balance per profile in Core Data and grant earnings from `ProgressStore.recordSession` callbacks.",
                    "Drive market orders from adaptive math prompts generated by `MathProblemGenerator`, surfacing them as cards with fun NPC art.",
                    "Link the earnings to `ShopView` inventory by tagging new Grade 2 decorations that unlock when purchases are made."
                ],
                reward: "Unlocks stall decorations and avatar stickers for the carnival market."
            ),
            CurriculumClass(
                title: "Co-op Challenge Board",
                objective: "Encourage collaboration by tackling shared math goals across local profiles.",
                gamifiedStrategy: "Each correct solution contributes to a community goal that unlocks a party animation when the bar fills.",
                swiftUIHighlights: [
                    "Track shared progress in Core Data by summing `SubjectProgress.totalCorrectAnswers` across profiles into a group goal entity.",
                    "Visualise the communal target with a `ProgressView` and celebratory confetti when the threshold is met.",
                    "Surface the board inside the Learn dashboard so siblings can see their combined impact."
                ],
                reward: "Awards a party burst animation and bonus coins for all contributors."
            ),
            CurriculumClass(
                title: "Lightning Fact Races",
                objective: "Build fluency with 2s, 5s, and 10s multiplication facts using friendly time trials.",
                gamifiedStrategy: "Players race to beat their personal best or a sibling's ghost score in quick-fire quizzes.",
                swiftUIHighlights: [
                    "Reuse `MathExerciseView` with shorter sessions and show a local leaderboard sourced from Core Data.",
                    "Store best streaks on `SkillProgress` to surface the score to beat before each run.",
                    "Play a subtle spark animation for new records using Lottie or `withAnimation`."
                ],
                reward: "Earns speed badges and streak multipliers for the in-app economy."
            ),
            CurriculumClass(
                title: "Fraction Pizza Lab",
                objective: "Introduce unit fractions (1/2, 1/3, 1/4) with interactive shape slicing.",
                gamifiedStrategy: "Children build pizzas by tapping slices to match requested fractions before serving characters.",
                swiftUIHighlights: [
                    "Render pizzas with `Circle()` segments and animate fills using `Trim` to show fractional pieces.",
                    "Bundle fun toppings assets and unlock them as fraction mastery improves via `SkillProgress`.",
                    "Narrate prompts with `AVSpeechSynthesizer` so learners hear the fraction request aloud."
                ],
                reward: "Unlocks premium toppings and a fraction mastery badge."
            )
        ]

        let languageClasses: [CurriculumClass] = [
            CurriculumClass(
                title: "Vocabulary Quest",
                objective: "Expand Grade 2 vocabulary through collectible word monsters.",
                gamifiedStrategy: "Each mastered word captures a friendly creature that lives in the learner's library vault.",
                swiftUIHighlights: [
                    "Store target words locally and present quizzes with animated capture sequences using bundled art.",
                    "Show the collection with a grid view that highlights newly caught monsters via `matchedGeometryEffect`.",
                    "Provide optional audio pronunciations with `AVSpeechSynthesizer` for accessibility."
                ],
                reward: "Adds the monster to the collection and grants library decor items."
            ),
            CurriculumClass(
                title: "Reading Buddy Habitat",
                objective: "Motivate daily reading with a growing virtual pet companion.",
                gamifiedStrategy: "The pet evolves and unlocks toys when the reader completes stories on consecutive days.",
                swiftUIHighlights: [
                    "Log reading streaks in Core Data by date and animate pet growth states inside a dedicated habitat view.",
                    "Trigger haptic or sound feedback when streak milestones are reached for extra delight.",
                    "Allow parents to review streak history through the existing Parent Dashboard."
                ],
                reward: "Unlocks new pet accessories and ambient habitat themes."
            ),
            CurriculumClass(
                title: "Sentence Builder Studio",
                objective: "Reinforce grammar by arranging jumbled sentence cards.",
                gamifiedStrategy: "Learners drag silly word tiles into order and see characters act out the correct sentence.",
                swiftUIHighlights: [
                    "Create draggable chips with `DragGesture` and animate success states with spring transitions.",
                    "Use `AVSpeechSynthesizer` to read the completed sentence aloud for reinforcement.",
                    "Store tricky sentences for later review when incorrect arrangements are submitted."
                ],
                reward: "Awards grammar badges and comic props for the creative studio."
            ),
            CurriculumClass(
                title: "Creative Comic Workshop",
                objective: "Encourage writing by finishing guided comic strips and prompts.",
                gamifiedStrategy: "Children fill speech bubbles or pick phrases to complete a story, then share the comic with family.",
                swiftUIHighlights: [
                    "Build reusable comic templates with SwiftUI stacks and export finished work as images saved in Core Data.",
                    "Offer quick word banks while still allowing free-form text entry for budding writers.",
                    "Surface completed comics inside the Parent Dashboard for encouragement."
                ],
                reward: "Generates printable certificates and unlocks new comic frames."
            )
        ]

        let scienceClasses: [CurriculumClass] = [
            CurriculumClass(
                title: "Magnet Lab",
                objective: "Explore magnetism concepts through interactive experiments.",
                gamifiedStrategy: "Drag virtual objects toward a magnet to predict which will stick and learn why.",
                swiftUIHighlights: [
                    "Use simple physics with `withAnimation` to snap magnetic objects onto a magnet sprite.",
                    "Provide explanatory fact cards after each prediction to reinforce vocabulary.",
                    "Track experiment attempts to unlock a lab coat cosmetic reward."
                ],
                reward: "Unlocks lab gear and science stickers."
            ),
            CurriculumClass(
                title: "Solar System Voyage",
                objective: "Teach Earth and space basics through a guided planet tour.",
                gamifiedStrategy: "A rocket travels from planet to planet as learners answer questions to refuel.",
                swiftUIHighlights: [
                    "Render the journey with a horizontal paged scroll and animate the rocket path after each correct answer.",
                    "Bundle offline planet fact cards and optional AR Quick Look assets for supported devices.",
                    "Award a telescope accessory and badge upon completing the tour."
                ],
                reward: "Grants a telescope item and Space Explorer badge."
            ),
            CurriculumClass(
                title: "Life Cycle Sequencer",
                objective: "Understand life cycles by arranging stages in the correct order.",
                gamifiedStrategy: "Learners reorder illustrated cards (egg → caterpillar → chrysalis → butterfly) to help creatures grow.",
                swiftUIHighlights: [
                    "Implement reorderable stacks using `DragGesture` and update the data model with smooth animations.",
                    "Play celebratory Lottie animations once the sequence is correct to visualise the transformation.",
                    "Record completion counts in Core Data to feed into mastery tracking."
                ],
                reward: "Earns life science badges and unlocks a butterfly companion."
            )
        ]

        let socialClasses: [CurriculumClass] = [
            CurriculumClass(
                title: "World Explorer Map",
                objective: "Introduce geography with interactive map hotspots.",
                gamifiedStrategy: "Tap landmarks on a stylised map to learn facts or answer quick quizzes.",
                swiftUIHighlights: [
                    "Overlay tappable buttons using `GeometryReader` and store facts locally for offline access.",
                    "Animate callout cards with custom transitions to keep exploration lively.",
                    "Unlock geographic attire items as learners master regions."
                ],
                reward: "Rewards include explorer hats and stamp badges."
            ),
            CurriculumClass(
                title: "Time-Travel Tales",
                objective: "Meet historical figures and connect events through storytelling.",
                gamifiedStrategy: "Children fix the timeline by answering questions after each story vignette.",
                swiftUIHighlights: [
                    "Sequence narrative scenes with `NavigationStack`, storing choices for replayability.",
                    "Use bundled voice-overs or synthesized narration so stories remain hands-free.",
                    "Present timeline badges and postcards for completed adventures."
                ],
                reward: "Awards history postcards and unlocks era-specific costumes."
            ),
            CurriculumClass(
                title: "Family Quiz Night",
                objective: "Foster collaborative learning with turn-based quiz rounds.",
                gamifiedStrategy: "Players take turns answering social studies questions and compare friendly scores.",
                swiftUIHighlights: [
                    "Support multiple local profiles and alternate turns, tracking per-player scores in session state.",
                    "Display an end-of-game summary card that parents can share via the system share sheet.",
                    "Offer optional Game Center leaderboards for families who enable online features."
                ],
                reward: "Unlocks family crest badges and extra coins for cooperative play."
            )
        ]

        let modules: [CurriculumModule] = [
            CurriculumModule(
                subject: .math,
                title: "Carnival Math Market",
                overview: "Deepen fluency with addition, subtraction, early multiplication, and fractions through a playful in-app economy.",
                narrativeHook: "Stock the carnival stalls by solving real-world math puzzles and spending coins on decorations.",
                rewardSummary: "Earn coins, streak boosts, and fraction mastery badges while unlocking new shop inventory.",
                classes: mathClasses
            ),
            CurriculumModule(
                subject: .language,
                title: "Storybook Creators Guild",
                overview: "Grow reading stamina, vocabulary, and grammar through collectible quests and creative writing challenges.",
                narrativeHook: "Capture mischievous word monsters and co-write comics with your reading buddy pet.",
                rewardSummary: "Collect library decor, pet accessories, and writing accolades.",
                classes: languageClasses
            ),
            CurriculumModule(
                subject: .science,
                title: "Discovery Lab Adventures",
                overview: "Investigate magnetism, space, and life cycles with interactive experiments and puzzles.",
                narrativeHook: "Complete lab missions to power up the classroom lab and earn science gear.",
                rewardSummary: "Unlock lab outfits, telescopes, and nature companions.",
                classes: scienceClasses
            ),
            CurriculumModule(
                subject: .socialStudies,
                title: "Global Explorer League",
                overview: "Explore geography, culture, and history through maps, stories, and family trivia challenges.",
                narrativeHook: "Travel through time and across continents to collect stamps for your explorer passport.",
                rewardSummary: "Gain explorer gear, history postcards, and cooperative bonuses.",
                classes: socialClasses
            )
        ]

        return GradeCourse(
            gradeBand: .grade2,
            heroTitle: "Grade 2 Expedition",
            overview: "Second graders broaden their skills with richer stories, collaborative goals, and a playful in-app economy.",
            motivationNotes: "Blend friendly competition, progress tracking, and collectible rewards to keep learners engaged while supporting offline play.",
            modules: modules
        )
    }()

    static let allCourses: [GradeCourse] = [grade2]
}
